name: Docker Image CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.31.4' # default is latest stable
      id: install

    - name: Configure AWS user
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: karma-api-k8s
        PRODUCTION_LATEST_TAG: production-latest
      run: |
        # Get the short SH
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)

        # Build the Docker image
        docker build -t $REGISTRY/$REPOSITORY:$SHORT_SHA .

        # Tag the image with the production-latest tag
        docker tag $REGISTRY/$REPOSITORY:$SHORT_SHA $REGISTRY/$REPOSITORY:$PRODUCTION_LATEST_TAG

        # Push the image with the commit SHA tag
        docker push $REGISTRY/$REPOSITORY:$SHORT_SHA

        # Push the image with the production-latest tag
        docker push $REGISTRY/$REPOSITORY:$PRODUCTION_LATEST_TAG

    - name: Update kubeconfig for EKS cluster
      run: |
        # Update the kubeconfig to include the context for the EKS cluster
        aws eks update-kubeconfig --name karma-cluster --region eu-north-1

    - name: List deployments
      run: |
        # List all deployments in the current namespace to verify the deployment exists
        kubectl get deployments -n karma-prod-namespace

    - name: Scale down existing deployment
      run: |
        kubectl scale deployment karma-api-k8s-deployment --replicas=0 -n karma-prod-namespace

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s-prod/karma-ns.yaml
        kubectl apply -f k8s-prod/karmadb-config.yaml
        kubectl apply -f k8s-prod/karmadb-secret.yaml
        kubectl apply -f k8s-prod/karma-service.yaml
        kubectl apply -f k8s-prod/karma-deployment.yaml
        kubectl apply -f k8s-prod/karma-ingress.yaml

    - name: Scale up new deployment
      run: |
        kubectl scale deployment karma-api-k8s-deployment --replicas=1 -n karma-prod-namespace
